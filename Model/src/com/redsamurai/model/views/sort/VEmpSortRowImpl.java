package com.redsamurai.model.views.sort;

import com.redsamurai.model.views.base.BaseViewRowImpl;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Jun 12 12:20:49 CST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class VEmpSortRowImpl extends BaseViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        EmployeeId {
            public Object get(VEmpSortRowImpl obj) {
                return obj.getEmployeeId();
            }

            public void put(VEmpSortRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        FirstName {
            public Object get(VEmpSortRowImpl obj) {
                return obj.getFirstName();
            }

            public void put(VEmpSortRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LastName {
            public Object get(VEmpSortRowImpl obj) {
                return obj.getLastName();
            }

            public void put(VEmpSortRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Email {
            public Object get(VEmpSortRowImpl obj) {
                return obj.getEmail();
            }

            public void put(VEmpSortRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PhoneNumber {
            public Object get(VEmpSortRowImpl obj) {
                return obj.getPhoneNumber();
            }

            public void put(VEmpSortRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        HireDate {
            public Object get(VEmpSortRowImpl obj) {
                return obj.getHireDate();
            }

            public void put(VEmpSortRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        JobId {
            public Object get(VEmpSortRowImpl obj) {
                return obj.getJobId();
            }

            public void put(VEmpSortRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Salary {
            public Object get(VEmpSortRowImpl obj) {
                return obj.getSalary();
            }

            public void put(VEmpSortRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CommissionPct {
            public Object get(VEmpSortRowImpl obj) {
                return obj.getCommissionPct();
            }

            public void put(VEmpSortRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ManagerId {
            public Object get(VEmpSortRowImpl obj) {
                return obj.getManagerId();
            }

            public void put(VEmpSortRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DepartmentId {
            public Object get(VEmpSortRowImpl obj) {
                return obj.getDepartmentId();
            }

            public void put(VEmpSortRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ManagerName {
            public Object get(VEmpSortRowImpl obj) {
                return obj.getManagerName();
            }

            public void put(VEmpSortRowImpl obj, Object value) {
                obj.setManagerName((String) value);
            }
        }
        ,
        ManagerIdVEmpSort {
            public Object get(VEmpSortRowImpl obj) {
                return obj.getManagerIdVEmpSort();
            }

            public void put(VEmpSortRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        JobsLovView1 {
            public Object get(VEmpSortRowImpl obj) {
                return obj.getJobsLovView1();
            }

            public void put(VEmpSortRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        EmployeesView1 {
            public Object get(VEmpSortRowImpl obj) {
                return obj.getEmployeesView1();
            }

            public void put(VEmpSortRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(VEmpSortRowImpl object);

        public abstract void put(VEmpSortRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int EMPLOYEEID = AttributesEnum.EmployeeId.index();
    public static final int FIRSTNAME = AttributesEnum.FirstName.index();
    public static final int LASTNAME = AttributesEnum.LastName.index();
    public static final int EMAIL = AttributesEnum.Email.index();
    public static final int PHONENUMBER = AttributesEnum.PhoneNumber.index();
    public static final int HIREDATE = AttributesEnum.HireDate.index();
    public static final int JOBID = AttributesEnum.JobId.index();
    public static final int SALARY = AttributesEnum.Salary.index();
    public static final int COMMISSIONPCT = AttributesEnum.CommissionPct.index();
    public static final int MANAGERID = AttributesEnum.ManagerId.index();
    public static final int DEPARTMENTID = AttributesEnum.DepartmentId.index();
    public static final int MANAGERNAME = AttributesEnum.ManagerName.index();
    public static final int MANAGERIDVEMPSORT = AttributesEnum.ManagerIdVEmpSort.index();
    public static final int JOBSLOVVIEW1 = AttributesEnum.JobsLovView1.index();
    public static final int EMPLOYEESVIEW1 = AttributesEnum.EmployeesView1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public VEmpSortRowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute EmployeeId.
     * @return the EmployeeId
     */
    public Integer getEmployeeId() {
        return (Integer) getAttributeInternal(EMPLOYEEID);
    }

    /**
     * Gets the attribute value for the calculated attribute FirstName.
     * @return the FirstName
     */
    public String getFirstName() {
        return (String) getAttributeInternal(FIRSTNAME);
    }

    /**
     * Gets the attribute value for the calculated attribute LastName.
     * @return the LastName
     */
    public String getLastName() {
        return (String) getAttributeInternal(LASTNAME);
    }

    /**
     * Gets the attribute value for the calculated attribute Email.
     * @return the Email
     */
    public String getEmail() {
        return (String) getAttributeInternal(EMAIL);
    }

    /**
     * Gets the attribute value for the calculated attribute PhoneNumber.
     * @return the PhoneNumber
     */
    public String getPhoneNumber() {
        return (String) getAttributeInternal(PHONENUMBER);
    }

    /**
     * Gets the attribute value for the calculated attribute HireDate.
     * @return the HireDate
     */
    public Timestamp getHireDate() {
        return (Timestamp) getAttributeInternal(HIREDATE);
    }

    /**
     * Gets the attribute value for the calculated attribute JobId.
     * @return the JobId
     */
    public String getJobId() {
        return (String) getAttributeInternal(JOBID);
    }

    /**
     * Gets the attribute value for the calculated attribute Salary.
     * @return the Salary
     */
    public BigDecimal getSalary() {
        return (BigDecimal) getAttributeInternal(SALARY);
    }

    /**
     * Gets the attribute value for the calculated attribute CommissionPct.
     * @return the CommissionPct
     */
    public BigDecimal getCommissionPct() {
        return (BigDecimal) getAttributeInternal(COMMISSIONPCT);
    }

    /**
     * Gets the attribute value for the calculated attribute ManagerId.
     * @return the ManagerId
     */
    public Integer getManagerId() {
        return (Integer) getAttributeInternal(MANAGERID);
    }

    /**
     * Gets the attribute value for the calculated attribute DepartmentId.
     * @return the DepartmentId
     */
    public Integer getDepartmentId() {
        return (Integer) getAttributeInternal(DEPARTMENTID);
    }

    /**
     * Gets the attribute value for the calculated attribute ManagerName.
     * @return the ManagerName
     */
    public String getManagerName() {
        
        RowSet rowSet = this.getEmployeesView1();
        
        Key key = new Key(new Object[]{this.getManagerId()});
        Row[] rows = rowSet.findByKey(key, 1);
        if (rows != null && rows.length > 0) {
            setAttributeInternal(MANAGERNAME, rows[0].getAttribute("FirstName") + " " + rows[0].getAttribute("LastName"));
        }
        
        return (String) getAttributeInternal(MANAGERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ManagerName.
     * @param value value to set the  ManagerName
     */
    public void setManagerName(String value) {
        setAttributeInternal(MANAGERNAME, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link ManagerIdVEmpSort.
     */
    public RowIterator getManagerIdVEmpSort() {
        return (RowIterator) getAttributeInternal(MANAGERIDVEMPSORT);
    }

    /**
     * Gets the view accessor <code>RowSet</code> JobsLovView1.
     */
    public RowSet getJobsLovView1() {
        return (RowSet) getAttributeInternal(JOBSLOVVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> EmployeesView1.
     */
    public RowSet getEmployeesView1() {
        return (RowSet) getAttributeInternal(EMPLOYEESVIEW1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

